Context
- Phase: We are in Phase 1 (MVP – headful login + persisted session).
- Observation: After a successful manual login, navigating to a search page redirects to Shopee’s anti-bot checkpoint: /verify/captcha?anti_bot_tracking_id=.... The CAPTCHA is not solvable automatically in our current MVP.

Why this happens (likely causes)
- IP & geo signals: The IP may be flagged (VPN/DC), or not aligned with the regional domain (e.g., non-BR IP on shopee.com.br), or the IP changed between login and search.
- Fingerprint & profile freshness: Fresh profile without history; GPU/WebGL/Canvas/Audio/RTC/Navigator characteristics and font lists can look atypical; UA/OS/locale/timezone mismatches.
- Automation heuristics: Immediate deep-link to search, little/no dwell time, zero mouse/typing events, very fast timings; automation markers still detectable even when webdriver is hidden.
- Session risk: “Just logged in” account hitting search endpoints fast; missing consent cookies or prior browsing context.

Relation to the Architecture Plan
- Phase 1 (current): We only implemented headful login + simple search. No anti-bot hardening yet.
- Phase 3 (resilience): Retries/backoff, detect login wall/CAPTCHA and pause/notify; slower paced navigation; human-like timing.
- Phase 4 (sessions/proxies): Stable residential/mobile proxies aligned to target region; strict 1 IP per session; avoid mid-session IP change.
- Phase 5 (CAPTCHA/OTP): Integrate CAPTCHA-solving providers; implement manual fallback flows.
- Phase 7 (anti-detect): Use anti-detect browser profiles (e.g., Kameleo) for realistic fingerprints, locale/timezone alignment, and persistent profiles.

Immediate mitigation we will try now
- Use system Chrome instead of the bundled Chromium via Playwright’s channel "chrome" to better align the browser engine with a real user installation.
  - Set BROWSER_CHANNEL=chrome in .env.
  - Re-run login and then search using the same session and IP.

Other practical mitigations to consider next
- Behavior humanization (Phase 3):
  - Keep HEADLESS=false initially, add realistic dwell time on homepage; scroll and click a few elements before searching.
  - Navigate via the UI: click search box, type the keyword with delays, press Enter instead of directly loading search?keyword=...
  - Randomized short delays (jitter) between steps.
- Geo/IP hygiene (Phase 4):
  - Use a stable country-aligned residential/mobile proxy for the domain (BR for shopee.com.br). One IP per profile/account; avoid rotation mid-session.
- Headers & locale consistency (Phase 3):
  - Align Accept-Language with LOCALE; ensure timezone/locale/user-agent are consistent.
- CAPTCHA handling (Phase 5):
  - Add solver integration as a fallback when the gate appears.
- Anti-detect profiles (Phase 7):
  - Run via anti-detect browser with persistent, “warmed” profiles.

Suggested next steps checklist
1) Set BROWSER_CHANNEL=chrome and HEADLESS=false in .env.
2) Re-run login (python cli.py login) and dwell on homepage for ~30–60s before saving the session.
3) Run a small search (python cli.py search -k "fones bluetooth" -l 10). If redirected to CAPTCHA again, stop.
4) If the issue persists:
   - Add behavior humanization (UI navigation + delays).
   - Switch to a BR residential/mobile proxy and keep it pinned per profile.
   - Consider CAPTCHA solving integration.
   - Consider anti-detect browser integration.

Note
- Shopee’s defenses evolve. Selector and flow maintenance will be ongoing, and hardened phases (3–7) should be prioritized if the CAPTCHA gate remains frequent.

